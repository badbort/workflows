parameters:
  - name: solutionPath
    displayName: Visual Studio Solution Path
    type: string

  - name: projectPath
    displayName: App CSProj File Path
    type: string

  - name: buildConfiguration
    displayName: Build Configuration Profile
    type: string
    default: 'Release'

  - name: defaultBranch
    displayName: Default branch of the git repository
    type: string
    default: main

  - name: dotNetVersion
    displayName: DotNet Version
    default: '6.x'

    # Allowed values: functionApp (Function App on Windows), functionAppLinux (Function App on Linux).
    # Defaults to the windows option
  - name: appType
    displayName: Azure Function App type for the deployment
    default: functionApp 
    type: string

  - name: environmentDev
    displayName: Azure DevOps Deployment Environment for Dev
    type: string

  - name: environmentSIT
    displayName: Azure DevOps Deployment Environment for SIT
    type: string

  - name: environmentUAT
    displayName: Azure DevOps Deployment Environment for UAT
    type: string

  - name: environmentPrd
    displayName: Azure DevOps Deployment Environment for Production
    type: string

  - name: serviceConnectionDev
    displayName: DevService Connection Name
    type: string

  - name: serviceConnectionSIT
    displayName: SIT Service Connection Name
    type: string

  - name: serviceConnectionUAT
    displayName: UAT Service Connection Name
    type: string

  - name: serviceConnectionPrd
    displayName: Production Service Connection Name
    type: string
    
  - name: functionAppNameDev
    displayName: Dev Function App Name
    type: string
    
  - name: functionAppNameSIT
    displayName: SIT Function App Name
    type: string
    
  - name: functionAppNameUAT
    displayName: UAT Function App Name
    type: string

  - name: functionAppNamePrd
    displayName: Production Function App Name
    type: string

  - name: functionAppUrlDev
    displayName: Dev Function App Url
    type: string
    
  - name: functionAppUrlSIT
    displayName: SIT Function App Url
    type: string
    
  - name: functionAppUrlUAT
    displayName: UAT FFunction App Url
    type: string

  - name: functionAppUrlPrd
    displayName: Production Function App Url
    type: string

  - name: adAppIdUriDev
    displayName: Dev AAD App Id Uri
    type: string

  - name: adAppIdUriSIT
    displayName: SIT AAD App Id Uri
    type: string

  - name: adAppIdUriUAT
    displayName: UAT AAD App Id Uri
    type: string

  - name: adAppIdUriPrd
    displayName: Production AAD App Id Uri
    type: string

  - name: runtimeStack
    displayName: Runtime Stacak
    type: string
    default: DOTNET|6.0

  - name: appSettingsDev
    displayName: Application Settings DEV
    type: string
    default: ''

  - name: appSettingsSIT
    displayName: Application Settings SIT
    type: string
    default: ''

  - name: appSettingsUAT
    displayName: Application Settings UAT
    type: string
    default: ''

  - name: appSettingsPrd
    displayName: Application Settings Production
    type: string
    default: ''

  - name: postmanCollection
    displayName: Postman Collection File Path
    type: string
    default: ''

  - name: postmanArgsDev
    displayName: Dev Postman Extra Command Line Args
    type: string
    default: ''

  - name: postmanArgsSIT
    displayName: SIT Postman Extra Command Line Args
    type: string
    default: ''

  - name: postmanArgsUAT
    displayName: UAT Postman Extra Command Line Args
    type: string
    default: ''

  - name: postmanArgsPrd
    displayName: Production Postman Extra Command Line Args
    type: string
    default: ''
    
  - name: testProduction
    displayName: Perform Postman tests in Production
    type: boolean
    default: false

stages:
  - stage: BuildAndTest
    displayName: 'Build and Test'
    jobs:
    - template: app-build.yaml
      parameters:
        solutionPath: ${{ parameters.solutionPath }}
        projectPath: ${{ parameters.projectPath }}
        buildConfiguration: ${{ parameters.buildConfiguration }}
        version: ${{ parameters.dotNetVersion }}

  - stage: DeployDEV
    displayName: 'Deploy App to Dev'
    dependsOn: BuildAndTest
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/${{ parameters.defaultBranch }}'))
    jobs:
    - template: app-deploy.yaml
      parameters:
        deployment: Deploy_Dev
        environmentName: ${{ parameters.environmentDev }}
        serviceConnection: ${{ parameters.serviceConnectionDev }}
        functionAppName: ${{ parameters.functionAppNameDev }}
        appType: ${{ parameters.appType }}
        adAppIdUri: ${{ parameters.adAppIdUriDev }}
        runtimeStack: ${{ parameters.runtimeStack }}
        appSettings: ${{ parameters.appSettingsDev }}
        postmanCollection: ${{ parameters.postmanCollection }}
        postmanArgs: ${{ parameters.postmanArgsDev }} --global-var URL=${{ parameters.functionAppUrlDev }}
        
  - stage: DeploySIT
    displayName: 'Deploy App to SIT'
    dependsOn: DeployDEV
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/${{ parameters.defaultBranch }}'))
    jobs:
    - template: app-deploy.yaml
      parameters:
        deployment: Deploy_SIT
        environmentName: ${{ parameters.environmentSIT }}
        serviceConnection: ${{ parameters.serviceConnectionSIT }}
        functionAppName: ${{ parameters.functionAppNameSIT }}
        appType: ${{ parameters.appType }}
        adAppIdUri: ${{ parameters.adAppIdUriSIT }}
        runtimeStack: ${{ parameters.runtimeStack }}
        appSettings: ${{ parameters.appSettingsSIT }}
        postmanCollection: ${{ parameters.postmanCollection }}
        postmanArgs: ${{ parameters.postmanArgsSIT }} --global-var URL=${{ parameters.functionAppUrlSIT }}

  - stage: DeployUAT
    displayName: 'Deploy App to UAT'
    dependsOn: DeploySIT
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/${{ parameters.defaultBranch }}'))
    jobs:
    - template: app-deploy.yaml
      parameters:
        deployment: Deploy_UAT
        environmentName: ${{ parameters.environmentUAT }}
        serviceConnection: ${{ parameters.serviceConnectionUAT }}
        functionAppName: ${{ parameters.functionAppNameUAT }}
        appType: ${{ parameters.appType }}
        adAppIdUri: ${{ parameters.adAppIdUriUAT }}
        runtimeStack: ${{ parameters.runtimeStack }}
        appSettings: ${{ parameters.appSettingsUAT }}
        postmanCollection: ${{ parameters.postmanCollection }}
        postmanArgs: ${{ parameters.postmanArgsUAT }} --global-var URL=${{ parameters.functionAppUrlUAT }}

  - stage: DeployPRD
    displayName: 'Deploy App to Production'
    dependsOn: DeployUAT
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/${{ parameters.defaultBranch }}'))
    jobs:
    - template: app-deploy.yaml
      parameters:
        deployment: Deploy_Prd
        environmentName: ${{ parameters.environmentPrd }}
        serviceConnection: ${{ parameters.serviceConnectionPrd }}
        functionAppName: ${{ parameters.functionAppNamePrd }}
        appType: ${{ parameters.appType }}
        adAppIdUri: ${{ parameters.adAppIdUriPrd }}
        runtimeStack: ${{ parameters.runtimeStack }}
        appSettings: ${{ parameters.appSettingsPrd }}
        ${{ if eq(parameters.testProduction, true) }}:
          postmanCollection: ${{ parameters.postmanCollection }}
          postmanArgs: ${{ parameters.postmanArgsPrd }} --global-var URL=${{ parameters.functionAppUrlPrd }}
        ${{ if ne(parameters.testProduction, true) }}:
          postmanCollection: ''
          postmanArgs: ''